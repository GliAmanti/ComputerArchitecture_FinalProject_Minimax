From e819910a54690ee1a33540d1d8b740adc3e11e31 Mon Sep 17 00:00:00 2001
From: Graeme Smecher <gsmecher@threespeedlogic.com>
Date: Tue, 7 Mar 2023 15:49:32 -0800
Subject: [PATCH] Suppress privilege tests

---
 .../rv32i_m/privilege/src/ebreak.S            |  75 -------------
 .../rv32i_m/privilege/src/ecall.S             |  72 -------------
 .../rv32i_m/privilege/src/misalign-beq-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-bge-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-bgeu-01.S  |  91 ----------------
 .../rv32i_m/privilege/src/misalign-blt-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-bltu-01.S  |  91 ----------------
 .../rv32i_m/privilege/src/misalign-bne-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-jal-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-lh-01.S    |  91 ----------------
 .../rv32i_m/privilege/src/misalign-lhu-01.S   |  91 ----------------
 .../rv32i_m/privilege/src/misalign-lw-01.S    | 101 ------------------
 .../rv32i_m/privilege/src/misalign-sh-01.S    |  91 ----------------
 .../rv32i_m/privilege/src/misalign-sw-01.S    | 101 ------------------
 .../rv32i_m/privilege/src/misalign2-jalr-01.S |  91 ----------------
 15 files changed, 1350 deletions(-)
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/ebreak.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/ecall.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-beq-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-bge-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-bgeu-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-blt-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-bltu-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-bne-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-jal-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-lh-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-lhu-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-lw-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-sh-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign-sw-01.S
 delete mode 100644 riscv-test-suite/rv32i_m/privilege/src/misalign2-jalr-01.S

diff --git a/riscv-test-suite/rv32i_m/privilege/src/ebreak.S b/riscv-test-suite/rv32i_m/privilege/src/ebreak.S
deleted file mode 100644
index 593cc8e..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/ebreak.S
+++ /dev/null
@@ -1,75 +0,0 @@
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the ebreak instruction of the RISC-V I extension.
-// 
-
-#include "model_test.h"
-#include "arch_test.h"
-
-RVTEST_ISA("RV32I_Zicsr")
-
-# Test code region
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-    RVTEST_CASE(1,"//check ISA:=regex(.*32.*); check ISA:=regex(.*I.*Zicsr.*); def rvtest_mtrap_routine=True; def TEST_CASE_1=True",ebreak)
-    # ---------------------------------------------------------------------------------------------
-
-    LA(     x1,test_A_res)
-    
-    LI(     x2,0x11111111)
-    .option push;
-    .option norvc;
-    ebreak
-    nop
-    nop
-    sw      x0, 0(x1)
-    sw      x2, 4(x1)
-    .option pop;
-    
-    RVMODEL_IO_WRITE_STR(x30, "# Test part A - test EBREAK\n");
-
-    RVMODEL_IO_WRITE_STR(x30, "# Test End\n")
-
-#endif
-
- # ---------------------------------------------------------------------------------------------
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-# Input data section.
-    .data
-    .align 4
-RVTEST_DATA_END
-
-# Output data section.
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-test_A_res:
-  .fill 2, 4, 0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-mtrap_sigptr:
-  .fill 4, 4, 0xdeadbeef
-#endif
-
-#ifdef rvtest_gpr_save
-gpr_save:
-  .fill 32*(XLEN/32), 4, 0xdeadbeef
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/ecall.S b/riscv-test-suite/rv32i_m/privilege/src/ecall.S
deleted file mode 100644
index 3a50827..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/ecall.S
+++ /dev/null
@@ -1,72 +0,0 @@
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the ecall instruction of the RISC-V I extension.
-// 
-
-#include "model_test.h"
-#include "arch_test.h"
-
-RVTEST_ISA("RV32I_Zicsr")
-
-# Test code region
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-    RVTEST_CASE(1,"//check ISA:=regex(.*32.*); check ISA:=regex(.*I.*Zicsr.*); def rvtest_mtrap_routine=True; def TEST_CASE_1=True",ecall)
-
-    # ---------------------------------------------------------------------------------------------
-    LA(     x1,test_A_res)
-    
-    LI(     x2,0x11111111)
-    ecall
-    nop
-    nop
-    sw      x0, 0(x1)
-    sw      x2, 4(x1)
-    
-    RVMODEL_IO_WRITE_STR(x30, "# Test part A - test ECALL\n");
-
-    RVMODEL_IO_WRITE_STR(x30, "# Test End\n")
-
-#endif
-
- # ---------------------------------------------------------------------------------------------
-    # HALT
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-# Input data section.
-    .data
-    .align 4
-RVTEST_DATA_END
-
-# Output data section.
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-test_A_res:
-    .fill 2, 4, 0xdeadbeef
-
-mtrap_sigptr:
-  .fill 4, 4, 0xdeadbeef
-
-#ifdef rvtest_gpr_save
-gpr_save:
-  .fill 32*(XLEN/32), 4, 0xdeadbeef
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-beq-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-beq-01.S
deleted file mode 100644
index cf54ecd..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-beq-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the beq instruction of the RISC-V I extension for the misalign-beq covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-beq)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-beq)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val==rs2_val and ea_align == 2, 
-// opcode: beq, op1:x10; op2:x11; op1val:0x5; op2val:0x5; immval:0x8; align:2
-TEST_BRANCH_OP(beq, x2, x10, x11, 0x5, 0x5, 0x8, 3f, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-bge-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-bge-01.S
deleted file mode 100644
index 8e63845..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-bge-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the bge instruction of the RISC-V I extension for the misalign-bge covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bge)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bge)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val>rs2_val and ea_align == 2, 
-// opcode: bge, op1:x10; op2:x11; op1val:0x4000000; op2val:-0xb503; immval:0x0; align:2
-TEST_BRANCH_OP(bge, x2, x10, x11, 0x4000000, -0xb503, 0x0, 3f, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-bgeu-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-bgeu-01.S
deleted file mode 100644
index 609514a..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-bgeu-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the bgeu instruction of the RISC-V I extension for the misalign-bgeu covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bgeu)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bgeu)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val>rs2_val and ea_align == 2, 
-// opcode: bgeu, op1:x10; op2:x11; op1val:0x55555555; op2val:0x20000000; immval:0x400; align:2
-TEST_BRANCH_OP(bgeu, x2, x10, x11, 0x55555555, 0x20000000, 0x400, 1b, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-blt-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-blt-01.S
deleted file mode 100644
index fe90fcf..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-blt-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the blt instruction of the RISC-V I extension for the misalign-blt covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-blt)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-blt)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val<rs2_val and ea_align == 2, 
-// opcode: blt, op1:x10; op2:x11; op1val:0x0; op2val:0x2000000; immval:0x2; align:2
-TEST_BRANCH_OP(blt, x2, x10, x11, 0x0, 0x2000000, 0x2, 3f, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-bltu-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-bltu-01.S
deleted file mode 100644
index e94e292..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-bltu-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the bltu instruction of the RISC-V I extension for the misalign-bltu covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bltu)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bltu)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val<rs2_val and ea_align == 2, 
-// opcode: bltu, op1:x10; op2:x11; op1val:0x800; op2val:0x400000; immval:0x2; align:2
-TEST_BRANCH_OP(bltu, x2, x10, x11, 0x800, 0x400000, 0x2, 1b, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-bne-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-bne-01.S
deleted file mode 100644
index a566ebc..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-bne-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the bne instruction of the RISC-V I extension for the misalign-bne covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bne)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-bne)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-//  rs1_val!=rs2_val and ea_align == 2, 
-// opcode: bne, op1:x10; op2:x11; op1val:-0x7; op2val:0x8; immval:0x20; align:2
-TEST_BRANCH_OP(bne, x2, x10, x11, -0x7, 0x8, 0x20, 3f, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-jal-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-jal-01.S
deleted file mode 100644
index 92f8682..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-jal-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the jal instruction of the RISC-V I extension for the misalign-jal covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-jal)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-jal)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 2, 
-// opcode: jal; dest:x10; immval:0x100; align:2
-TEST_JAL_OP(x2, x10, 0x100, 3f, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-lh-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-lh-01.S
deleted file mode 100644
index 0210c5d..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-lh-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the lh instruction of the RISC-V I extension for the misalign-lh covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*); check hw_data_misaligned_support:=True; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lh)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check hw_data_misaligned_support:=False; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lh)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 1, 
-// opcode:lh op1:x10; dest:x11; immval:0x555; align:1
-TEST_LOAD(x1,x2,0,x10,x11,0x555,0,lh,1)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-lhu-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-lhu-01.S
deleted file mode 100644
index 6e3116f..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-lhu-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the lhu instruction of the RISC-V I extension for the misalign-lhu covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*); check hw_data_misaligned_support:=True; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lhu)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check hw_data_misaligned_support:=False; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lhu)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 1, 
-// opcode:lhu op1:x10; dest:x11; immval:-0x556; align:1
-TEST_LOAD(x1,x2,0,x10,x11,-0x556,0,lhu,1)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-lw-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-lw-01.S
deleted file mode 100644
index 3399754..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-lw-01.S
+++ /dev/null
@@ -1,101 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the lw instruction of the RISC-V I extension for the misalign-lw covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*); check hw_data_misaligned_support:=True; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lw)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check hw_data_misaligned_support:=False; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-lw)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 1, 
-// opcode:lw op1:x10; dest:x11; immval:0x0; align:1
-TEST_LOAD(x1,x2,0,x10,x11,0x0,0,lw,1)
-
-inst_1:
-// ea_align == 2, 
-// opcode:lw op1:x10; dest:x11; immval:0x100; align:2
-TEST_LOAD(x1,x2,0,x10,x11,0x100,4,lw,2)
-
-inst_2:
-// ea_align == 3, 
-// opcode:lw op1:x10; dest:x11; immval:-0x800; align:3
-TEST_LOAD(x1,x2,0,x10,x11,-0x800,8,lw,3)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 3*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-sh-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-sh-01.S
deleted file mode 100644
index 8835556..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-sh-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the sh instruction of the RISC-V I extension for the misalign-sh covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*); check hw_data_misaligned_support:=True; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-sh)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check hw_data_misaligned_support:=False; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-sh)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 1, 
-// opcode: sh; op1:x10; op2:x11; op2val:0x10000000; immval:-0x4; align:1
-TEST_STORE(x1,x2,0,x10,x11,0x10000000,-0x4,0,sh,1)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign-sw-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign-sw-01.S
deleted file mode 100644
index ca49df4..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign-sw-01.S
+++ /dev/null
@@ -1,101 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the sw instruction of the RISC-V I extension for the misalign-sw covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*); check hw_data_misaligned_support:=True; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-sw)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check hw_data_misaligned_support:=False; def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign-sw)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 1, 
-// opcode: sw; op1:x10; op2:x11; op2val:0x40000; immval:-0x800; align:1
-TEST_STORE(x1,x2,0,x10,x11,0x40000,-0x800,0,sw,1)
-
-inst_1:
-// ea_align == 2, 
-// opcode: sw; op1:x10; op2:x11; op2val:0x80000; immval:0x7ff; align:2
-TEST_STORE(x1,x2,0,x10,x11,0x80000,0x7ff,4,sw,2)
-
-inst_2:
-// ea_align == 3, 
-// opcode: sw; op1:x10; op2:x11; op2val:-0x8001; immval:0x4; align:3
-TEST_STORE(x1,x2,0,x10,x11,-0x8001,0x4,8,sw,3)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 3*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/privilege/src/misalign2-jalr-01.S b/riscv-test-suite/rv32i_m/privilege/src/misalign2-jalr-01.S
deleted file mode 100644
index 4b3efd0..0000000
--- a/riscv-test-suite/rv32i_m/privilege/src/misalign2-jalr-01.S
+++ /dev/null
@@ -1,91 +0,0 @@
-
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.1
-// timestamp : Tue Dec 15 15:45:45 2020 GMT
-// usage     : riscv_ctg \
-//                  -- cgf ('/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/dataset.cgf', '/scratch/git-repo/incoresemi/riscv-compliance/riscv_ctg/sample_cgfs/rv32i_priv.cgf') \
-//                  -- xlen 32 \
-// -----------
-//
-// -----------
-// Copyright (c) 2020. RISC-V International. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the jalr instruction of the RISC-V I extension for the misalign2-jalr covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I_Zicsr")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*C.*); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign2-jalr)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*Zicsr.*); check ISA:=regex(^[^C]+$); def rvtest_mtrap_routine=True;def TEST_CASE_1=True;",misalign2-jalr)
-
-RVTEST_SIGBASE( x1,signature_x1_1)
-
-inst_0:
-// ea_align == 2, 
-// opcode: jalr; op1:x10; dest:x11; immval:-0x201; align:2 
-TEST_JALR_OP(x2, x11, x10, -0x201, x1, 0,2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-
-rvtest_data:
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-.word 0xbabecafe
-RVTEST_DATA_END
-
-
-RVMODEL_DATA_BEGIN
-rvtest_sig_begin:
-sig_begin_canary:
-CANARY;
-
-
-signature_x1_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_1:
-    .fill 1*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-tsig_begin_canary:
-CANARY;
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-tsig_end_canary:
-CANARY;
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-sig_end_canary:
-CANARY;
-rvtest_sig_end:
-RVMODEL_DATA_END
-- 
2.39.1

